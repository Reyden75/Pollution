#!/usr/bin/env python3

import sys
import math

from os import path

def helpUsage():
    print("USAGE")
    print("    ./309poll n file x y")
    print("DESCRIPTION")
    print("    n       number of points on the grid axis")
    print("    file    csv file containing the data points x;y;p")
    print("    x       abscissa of the point whose pollution level we want to know")
    print("    y       ordinate of the point whose pollution level we want to know")

def checkArguments(args):
    try:
        int(args[1])
        float(args[3])
        float(args[4])
    except:
        raise Exception("n or x or y is wrong, it should be int, float, float.\n")
    return (int(args[1]), float(args[3]), float(args[4]))

def checkFile(filename, n):
    if path.exists(filename) == False:
        raise Exception("File doesn't exist.\n")
    with open(filename) as file:
        lines = [line.rstrip('\n') for line in file]
    tmp = [0] * n
    for i in range(n):
        tmp[i] = [0] * n
    for line in lines:
        list = line.split(';')
        x, y = int(list[0]), int(list[1])
        tmp[y][x] = int(list[2])
    return (tmp)

def bernsteinPolynomial(n, k, p):
    tmp = int(math.factorial(n) / (math.factorial(k) * math.factorial(n - k)))
    tmp1 = math.pow(p, k)
    tmp2 = math.pow((1 - p), (n - k))
    return tmp * tmp1 * tmp2

def bezierSurface(n, tab, x, y):
    pollution = 0
    for a in range(n):
        for b in range(n):
            tmp1 = bernsteinPolynomial(n - 1, a, y)
            tmp2 = bernsteinPolynomial(n - 1, b, x)
            tmp3 = tab[a][b]
            pollution += tmp1 * tmp2 * tmp3
    print("%.2f" % pollution)


def pollution(n, list, x ,y):
    x = x / (n - 1)
    y = y / (n - 1)
    bezierSurface(n, list, x, y)

try:
    length = len(sys.argv)
    if length == 2 and sys.argv[1] == "-h":
        helpUsage()
        exit(0)
    if length == 5:
        n, x, y = checkArguments(sys.argv)
        list = checkFile(sys.argv[2], n)
        pollution(n, list, x, y)
    else:
        raise Exception("Invalid number of arguments.\n")
except Exception as error:
    sys.stdout.write(str(error))
    exit(84)